<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-autowire="byName">
	
	<!-- 使用自动扫描组件 -->
	<context:component-scan base-package="com.shop" />
	
	<!-- 定义数据源bean，使用c3p0数据源实现 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/shopnet?autoReconnect\=true&amp;useUnicode\=true&amp;characterEncoding\=UTF-8" />
		<property name="user" value="root" />
		<property name="password" value="123456" />
		<property name="maxPoolSize" value="200" />
		<property name="minPoolSize" value="1" />
		<property name="initialPoolSize" value="1" />
		<property name="maxIdleTime" value="20" />
	</bean>
	
	<!-- 定义Hibernate的SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!-- 依赖注入数据源，注入正是上面定义的dataSource -->
		<property name="dataSource" ref="dataSource"/>
		<!-- mappingResouces属性用来列出全部映射文件 -->
		<property name="mappingResources">
			<list>
				<!-- 以下用来列出Hibernate映射文件 -->
				<value>com/shop/domain/Address.hbm.xml</value>
				<value>com/shop/domain/Brand.hbm.xml</value>
				<value>com/shop/domain/Category.hbm.xml</value>
				<value>com/shop/domain/Collect.hbm.xml</value>
				<value>com/shop/domain/Comment.hbm.xml</value>
				<value>com/shop/domain/DiscountCoupon.hbm.xml</value>
				<value>com/shop/domain/GoodsColor.hbm.xml</value>
				<value>com/shop/domain/GoodsSize.hbm.xml</value>
				<value>com/shop/domain/GoodsListing.hbm.xml</value>
				<value>com/shop/domain/Notice.hbm.xml</value>
				<value>com/shop/domain/Order.hbm.xml</value>
				<value>com/shop/domain/OrderDetail.hbm.xml</value>
				<value>com/shop/domain/OrderState.hbm.xml</value>
				<value>com/shop/domain/Position.hbm.xml</value>
				<value>com/shop/domain/Storage.hbm.xml</value>
				<value>com/shop/domain/Style.hbm.xml</value>
				<value>com/shop/domain/Users.hbm.xml</value>
				<value>com/shop/domain/Worker.hbm.xml</value>
				<value>com/shop/domain/SecretSecurity.hbm.xml</value>
				<value>com/shop/domain/ShoppingCar.hbm.xml</value>
				<value>com/shop/domain/JinBRecord.hbm.xml</value>
			</list>
		</property>
		
		<!-- 定义Hibernate的SessionFactory的属性 -->
		<property name="hibernateProperties">
			<!-- 配置Hibernate属性 -->
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
				hibernate.hbm2ddl.auto=update
				hibernate.show_sql=true
				hibernate.format_sql=true
				hibernate.cache.use_second_level_cache=true
				hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
			</value>
		</property>
	</bean>
	
	<!-- 配置Hibernate的局部事务管理器，使用HibernateTransactionManager类 -->
	<!-- 该类实现PlatformTransactionManager接口，是针对Hibernate的特定实现-->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<!-- 配置HibernateTransactionManager时需要依注入SessionFactory的引用 -->
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- 配置事务增强处理,指定事务管理器 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 用于配置详细的事务语义 -->
		<tx:attributes>
			<!-- 所有以'get'开头的方法是read-only的 -->
			<tx:method name="get*" read-only="true"/>
			<!-- 其他方法使用默认的事务设置 -->
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<!-- 配置一个切入点 匹配com.app.service包及其子包下的所有bean-->
		<aop:pointcut id="pointcut" expression="execution(* com.shop.service..*(..))"/>
		<!-- 指定在切入点应用txAdvice事务增强处理 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
	</aop:config>
	
	 <!-- 配置Compass：Compass和Spring的整合 -->
	<bean id="compass" class="org.compass.spring.LocalCompassBean">
		<property name="classMappings">
			<list>
				<value>com.shop.domain.GoodsListing</value>
				<value>com.shop.domain.Style</value>
				<value>com.shop.domain.Brand</value>
				<value>com.shop.domain.Category</value>
				<value>com.shop.domain.GoodsColor</value>
			</list>
		</property>
		
		<property name="compassSettings">
			 <props>
            	<prop key="compass.engine.analyzer.default.type">net.paoding.analysis.analyzer.PaodingAnalyzer</prop>
            	<prop key="compass.engine.connection">file://D:/myYunFile/myApplication/searchIndex</prop>
            	<prop key="compass.engine.highlighter.default.formatter.simple.pre"><![CDATA[<font color='red'>]]></prop>
           	 	<prop key="compass.engine.highlighter.default.formatter.simple.post"><![CDATA[</font>]]></prop>
            	<prop key="compass.transaction.factory">org.compass.spring.transaction.SpringSyncTransactionFactory</prop>
         	</props>	
		</property>
		
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	
	<!-- Compass和Hibernate的整合 -->
	<!-- Compass GPS 自动完成索引的添加、修改、删除操作 -->
  	<bean id="compassGps" class="org.compass.gps.impl.SingleCompassGps" init-method="start" destroy-method="stop">
        <property name="compass" ref ="compass"/>
        <property name="gpsDevices">
          <list>
           <!-- 设置Hibernate驱动  -->
            <ref bean="hibernateGpsDevice" />
          </list>
        </property>
      </bean>
      
      <bean id="hibernateGpsDevice" class="org.compass.spring.device.hibernate.dep.SpringHibernate3GpsDevice">
        <property name="name">
        	<value>hibernateDevice</value>
        </property>
        <property name="sessionFactory" ref="sessionFactory" />
      </bean>
</beans>